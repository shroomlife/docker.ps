datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

model User {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())

  identities  UserIdentity[]
  dockerHosts DockerHost[]
}

enum UserIdentityType {
  EMAIL
  GOOGLE
}

model UserIdentity {
  id         Int              @id @default(autoincrement())
  uuid       String           @unique @default(uuid())
  type       UserIdentityType
  externalId String?

  username String? @db.VarChar(255)
  password String?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([type, externalId]) // pro Provider eindeutig
  @@unique([userId, type]) // pro User nur eine Identit√§t je Provider
  @@index([userId])
}

model DockerHost {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid())

  name String @db.VarChar(255)
  url  String

  authKey String @db.VarChar(255)

  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}
